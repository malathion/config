snippet shebang "shebang for bash"
#!/usr/bin/env bash
# `bash --version | head -n 1`
#
# © Copyright `date +%Y` Ryan Delaney. All rights reserved.
# This work is distributed WITHOUT ANY WARRANTY whatsoever; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the README file for additional terms and conditions on your use of this
# software.
#
endsnippet
snippet usage "usage function" b
# Usage {{{1
#
usage() {
cat <<EOD
${1:appname}
© Copyright `date +%Y` Ryan Delaney. All rights reserved.
Web site: http://github.com/rpdelaney

$1 ${2:description}

Usage: $1 [OPTION]

Options
  -?, --help                  print this help and exit
  -v, --verbose               increase verbosity
  -q, --quiet                 suppress all output (ignores -v)
EOD
exit 1
}
# 1}}}
endsnippet
snippet functions "standard functions" b
# Functions {{{1
verbose() {
  # $1 is the message to be printed
  message="\$1"
  # $2 is the verbosity threshold (default: 1)
  threshold="$2"

  if [[ "\$verbose" -ge "$threshold" ]] && [[ -z "\$quiet" ]]; then
    echo "\$message" >&2 || return 1
  fi
}

error() {
  # $1 is the message to be printed
  message="\$1"

  if [[ -z "\$quiet" ]]; then
    echo "\$message" >&2 || return 1
  fi
}
# 1}}}
endsnippet
snippet parameters "command-line arguments reader" b
# Parameters {{{1
#
while :
do
  case \$1 in
    --help | -\?)
      usage
      exit 0
      ;;
    -v | --verbose)
      # Each instance of -v adds 1 to verbosity
      verbose=\$((verbose+1))
      shift
      ;;
    -q | --quiet)
      quiet="1"
      shift
      ;;
    --) # End of all options
      shift
      break
      ;;
    -*)
      echo "FATAL: Unknown option : \$1" >&2
      exit 1
      shift
      ;;
    *)  # no more options. Stop while loop
      break
      ;;
  esac
done
# 1}}}
endsnippet
snippet depends "template for dependency check"
if ! type $1 &> /dev/null; then echo "ERROR: Missing dependency: $1" 1>&2; exit 1; fi
endsnippet
