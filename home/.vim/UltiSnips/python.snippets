snippet shebang "Shebang header for python scripts" b
#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# `python --version`
#
# Â© Copyright `date +%Y` Ryan Delaney. All rights reserved.
# This work is distributed WITHOUT ANY WARRANTY whatsoever; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the README file for additional terms and conditions on your use of this
# software.
#
$0
endsnippet

snippet modelines "Modelines for python scripts" b
# vim: ft=python expandtab smarttab shiftwidth=4 softtabstop=4 fileencoding=UTF-8:
endsnippet

snippet ifmain "ifmain" b
if __name__ == '__main__':
	${1:main()}$0
endsnippet

snippet from "from module import name" b
from ${1:module} import ${2:Stuff}
endsnippet

####################
# If / Else / Elif #
####################
snippet if "If" b
if ${1:condition}:
	${2:pass}
endsnippet

snippet ife "If / Else" b
if ${1:condition}:
	${2:pass}
else:
	${3:pass}
endsnippet

snippet ifee "If / Elif / Else" b
if ${1:condition}:
	${2:pass}
elif ${3:condition}:
	${4:pass}
else:
	${5:pass}
endsnippet

##########################
# Try / Except / Finally #
##########################
snippet try "Try / Except" b
try:
	${1:pass}
except ${2:Exception}, ${3:e}:
	${4:raise $3}
endsnippet

# Argparse
snippet argparse "Argparse" b
import argparse


def get_parser():
    """
    Define an argument parser and return the parsed arguments
    Usage:

    args = get_parser().parse_args()
    """
    parser = argparse.ArgumentParser(
        prog='${1:program}',
        description='${2:description}')
    parser.add_argument("--file", "-f", help="input file", required=True, metavar="FILE")
    parser.add_argument("--option", "-o", help="option description (default: %(default)s)", default="default")
    parser.add_argument("--option2", "-o2", help="option description")
    parser.add_argument("--verbose", "-v", help="increase verbosity", action="count")

    return parser
endsnippet
# vim:ft=snippets:
