#!/usr/bin/env sh
# GNU bash, version 4.4.23(1)-release (x86_64-unknown-linux-gnu)
# vim: filetype=sh foldmethod=marker shiftwidth=2 expandtab softtabstop=4:
#
# Â© Copyright 2018 Ryan Delaney. All rights reserved.
# This work is distributed WITHOUT ANY WARRANTY whatsoever; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the README file for additional terms and conditions on your use of this
# software.
#

main() {
  git config --global user.name "Ryan Delaney"
  if [ -r "$HOME"/.emailaddress ] ; then
    email_address="$(cat "$HOME"/.emailaddress)"
  else
    email_address="ryan.delaney@gmail.com"
  fi
  git config --global user.email "$email_address"
  git config --global core.excludesfile "$XDG_CONFIG_HOME/git/ignore"
  git config --global core.whitespace "trailing-space,space-before-tab"
  git config --global core.filemode "true"
  git config --global core.symlinks "true"
  git config --global push.default "tracking"
  git config --global branch.autosetuprebase "never"
  # diff {{{1
  git config --global --unset diff.external
  git config --global diff.tool "vimdiff"
  git config --global diff.renames "copies"
  git config --global diff.mnemonicprefix "true"
  git config --global difftool.prompt "true"
  # 1}}} diff
  # Merge {{{1
  git config --global merge.tool "vimdiff"
  git config --global merge.conflictstyle "diff3"
  git config --global mergetool.prompt "true"
  # 1}}} Merge
  if type diffr 2>/dev/null 1>/dev/null ; then
    diffr="diffr \
          --colors removed:background:00:foreground:01 \
          --colors refine-removed:background:0:foreground:124 \
          --colors added:background:0:foreground:10 \
          --colors refine-added:background:0:foreground:35:intense \
          | less -R"

    git config --global pager.diff "$diffr"
    git config --global pager.show "$diffr"
    git config --global pager.log "$diffr"
  else
    git config --global pager.diff "less"
  fi
  # Alias {{{1
    # hub {{{2
  git config --global alias.issu '! command -v hub >/dev/null 2>&1 && _issu() { hub issue --format="<#reset#><#green#> %i<#reset#> %t %l <#blue#><%au><#reset#> <#white#><#dim#>%U %n<#reset#>" | colorizer ; } && _issu'
  git config --global alias.issues 'issue --format="%sC %i%Creset %t %l%n %Cblue%U%Creset%n%n %b %n%n"'
    # hub 2}}}
  git config --global alias.ls 'log --pretty=format:%C(yellow)%h%Cred%d\ %Creset%s%Cblue\ [%cn] --decorate --no-merges'
  git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit"
  git config --global alias.lgd 'log --pretty=format:%C(yellow)%h\ %ad%Cred%d\ %Creset%s%Cblue\ [%cn] --decorate --date=short'
  git config --global alias.d "difftool -t vimdiff"
  git config --global alias.dc "difftool -t vimdiff --cached"
  git config --global alias.f "fetch"
  git config --global alias.fa "fetch --all --recurse-submodules=on-demand"
  git config --global alias.fd "fetch --dry-run"
  git config --global alias.fp "fetch --prune"
  git config --global alias.fap "fetch --all --prune --recurse-submodules=on-demand"
  git config --global alias.m "merge"
  git config --global alias.mt "mergetool -t vimdiff"
  git config --global alias.cp "cherry-pick"
  git config --global alias.exec '!$@'
  git config --global alias.ours '!f() { git checkout --ours $@ && git add $@; }; f'
  git config --global alias.theirs '!f() { git checkout --theirs $@ && git add $@; }; f'
  git config --global alias.cl "clone"
  git config --global alias.remotes "remote -v"
  git config --global alias.s "status --short --untracked-files=no"
  git config --global alias.st "status"
  git config --global alias.sp "status --porcelain"
  git config --global alias.c "commit --verbose"
  git config --global alias.cs "commit --verbose -S"
  git config --global alias.tags "tag --list -n3"
  git config --global alias.co "checkout"
  git config --global alias.br "branch -v"
  git config --global alias.bra "branch -va"
  git config --global alias.r "reset"
  git config --global alias.find '!git ls-files | grep -i'
  git config --global alias.g '!grep --color=auto --perl-regexp --full-name --heading --break --line-number -I'
  git config --global alias.leaders "shortlog -sn --all --no-merges"
  # 1}}} Alias
  # Color {{{1
  git config --global color.diff "auto"
  git config --global color.status "auto"
  git config --global color.branch "auto"
  git config --global color.interactive "auto"
  git config --global color.ui "auto"
  git config --global color.branch.current "green bold"
  git config --global color.branch.local "green"
  git config --global color.branch.remote "red bold"
  git config --global color.diff.meta "yellow bold"
  git config --global color.diff.frag "magenta bold"
  git config --global color.diff.old "red bold"
  git config --global color.diff.new "green bold"
  git config --global color.status.added "green bold"
  git config --global color.status.changed "yellow bold"
  git config --global color.status.untracked "red bold"
  git config --global color.sh.branch "yellow"
  # 1}}} Color
  # Advice {{{1
  git config --global advice.amWorkDir "true"
  git config --global advice.checkoutAmbiguousRemoteBranchName "true"
  git config --global advice.commitBeforeMerge "false"
  git config --global advice.detachedHead "false"
  git config --global advice.ignoredHook "false"
  git config --global advice.implicitIdentity "true"
  git config --global advice.nestedTag "true"
  git config --global advice.pushAlreadyExists "true"
  git config --global advice.pushFetchFirst "true"
  git config --global advice.pushNeedsForce "true"
  git config --global advice.pushNonFFCurrent "true"
  git config --global advice.pushNonFFMatching "true"
  git config --global advice.pushUnqualifiedRefname "true"
# git config --global advice.pushUpdateRejected
  git config --global advice.resetQuiet "true"
  git config --global advice.resolveConflict "true"
  git config --global advice.rmHints "true"
  git config --global advice.statusHints "false"
  git config --global advice.statusUoption "true"
  git config --global advice.waitingForEditor "true"
  # 1}}} Advice
  # GUI {{{1
  git config --global gui.wmstate "normal"
  git config --global gui.geometry "1920x1014+1680+18 192 177"
  # 1}}} GUI
  # URL replacements {{{1
  git config --global --replace-all url."git@github.com:".insteadof "github:"
  git config --global --replace-all url."https://github.com:".insteadof "http://github.com/"
  git config --global --replace-all url."https://gitlab.com:".insteadof "http://gitlab.com/"
  git config --global --replace-all url."https://notabug.org:".insteadof "http://notabug.org/"
  git config --global --replace-all diff.gpg.textconv "gpg --no-tty --decrypt"
  # 1}}} URL replacements
  # Commit template {{{1
    # shellcheck disable=SC2154
  commit_template_file=${dotfiles_dest:-$HOME/.dotfiles}/data/git.commit.template/git.commit.template
  if [ -r "$commit_template_file" ]; then
    git config --global commit.template "$commit_template_file"
  else
    echo "WARNING: git commit template not found: $commit_template_file"
  fi
  # Commit template 1}}}
}

main "$@"

# EOF
